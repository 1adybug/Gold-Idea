generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Question {
  id          Int           @id @default(autoincrement())
  content     String
  goal        String        @default("")
  publisherId Int
  publisher   User          @relation(fields: [publisherId], references: [id])
  comments    Comment[]
  collections Collections[]
  createTime  DateTime      @default(now())
  updateTime  DateTime      @default(now())
}

model Comment {
  id          Int      @id @default(autoincrement())
  content     String
  publisherId Int
  publisher   User     @relation(fields: [publisherId], references: [id])
  questionId  Int
  question    Question @relation(fields: [questionId], references: [id])
  reply       Reply?
  createTime  DateTime @default(now())
  updateTime  DateTime @default(now())
}

model Reply {
  id          Int      @id @default(autoincrement())
  content     String
  publisherId Int
  publisher   User     @relation(fields: [publisherId], references: [id])
  commentId   Int?     @unique
  comment     Comment? @relation(fields: [commentId], references: [id])
  createTime  DateTime @default(now())
  updateTime  DateTime @default(now())
}

model User {
  id          Int           @id @default(autoincrement())
  avator      String?
  userName    String
  policeNo    String
  phone       String
  comments    Comment[]
  collections Collections[]
  replies     Reply[]
  unitId      Int
  unit        Unit?
  Question    Question[]
}

model Unit {
  unitId     Int      @id @default(autoincrement())
  unitNo     String
  unitName   String
  createTime DateTime @default(now())
  updateTime DateTime @default(now())
  userId     Int      @unique
  user       User     @relation(fields: [userId], references: [id])
}

model Collections {
  id         Int      @id @default(autoincrement())
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  questionId Int
  question   Question @relation(fields: [questionId], references: [id])
  createTime DateTime @default(now())
  updateTime DateTime @default(now())

  @@unique([userId, questionId])
}
